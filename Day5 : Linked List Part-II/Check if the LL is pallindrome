class Solution {
public:
    ListNode* reverse(ListNode* node){
        ListNode* pre=NULL ;
        ListNode* nex=NULL ;
        while(node!=NULL){
            nex=node->next ;
            node->next=pre;
            pre=node;
            node=nex ;
        }
        return pre ;
    }

    bool isPalindrome(ListNode* head) {
        if(head==NULL ||head->next == NULL){
            return true ;
        }
        ListNode* fast=head;
        ListNode* slow=head;
        while(fast->next!=NULL && fast->next->next!=NULL){
            fast=fast->next->next ;
            slow=slow->next ;
        }
        slow->next=reverse(slow->next) ;
        slow=slow->next ;
        ListNode* dummy=head ;
        while(slow!=NULL){
            if(dummy->val != slow->val) return false ;
            dummy=dummy->next ;
            slow=slow->next ;

        }
        return true ;
    }
};
